package com.certification.ocp.jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

public class DriverAndConnections {

    public static void main(String[] args) {

        /*
            Driver is an interface that all driver classes must implement, those drivers are loaded automatically by the DriverManager class
            The Driver::connect method attempts to make a database connection using the given URL (this method must not be called directly from your code, it will be called by jdbc api)
                when the driver class is loaded, it should create an instance of itself and register with the driver manager (and that depends on the jdbc driver implementation)
            The Connection interface represents a connection to a database. It contains methods to manage db connections and create SQL statements
            A Connection object can be obtained by calling the DriverManager::getConnection method

            The Statement interface objects are used to execute SQL statements and returning query results. A Statement can be created using Connection::createStatement method.
            If the connection is closed, its statement will be closed also.

            A ResultSet instance is a table of data indicating a database result set which is usually generated by executing a statement on a connection.
            When the statement creating a ResultSet is closed, the result set itself is automatically closed.

            When a connection is required, the DriverManager locates an appropriate driver based on the given JDBC URL, then attempts to establish a connection
                via the connect method of the retrieved Driver instance. You can use one of these method to get a connection :
                DriverManager:: public static Connection getConnection(String url) throws SQLException
                DriverManager:: public static Connection getConnection(String url, String user, String password) throws SQLException
                DriverManager:: public static Connection getConnection(String url, java.util.Properties info) throws SQLException
         */

        String url       = "jdbc:mysql://localhost:3306/mysql-db";
        String user      = "root";
        String password  = "secret";

        try(Connection connection = DriverManager.getConnection(url, user, password)) {
            // processing here
        } catch(SQLException e) {
            System.out.println(e.getMessage());
        }

        /*
            URL syntax :
            Java DB : jdbc:derby:[sub-sub-protocol:][database-name][;attribute=value]*
            Mysql   : jdbc:mysql://[host][,fail-over-host...][:port]/[database][?propertyName1=value1][&propertyName2=value2]*
         */

        Properties pros = new Properties();
        pros.put("user","root");
        pros.put("password","secret");
        url = "jdbc:mysql://localhost:3306/mysql-db?user=admin&password=admin";
        try(Connection connection = DriverManager.getConnection(url, pros)) {
            // if user and password are both specified as part of the URL and as a separate argument, it is up to the implementation
            // defined to which value take precedence
        } catch(SQLException e) {
            System.out.println(e.getMessage());
        }
    }
}
